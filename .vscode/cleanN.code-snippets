{
"fgets with newline cleanup": {
		"prefix": "fgetsline",
		"body": [
		"char $1[$2];", 
		"fgets($1, $2, stdin);",
		"for (int i = 0; i < $2 - 1; i++) {",
		"  if ($1[i] == '\\n') {",
		"    $1[i] = '\\0';",
		"    break;",
		"  }",
		"}",
		"int length = strlen($1);"
		],
			"description": "Lee una línea con fgets, elimina el salto de línea y calcula la longitud"
	},

	"main function with args": {
		"prefix": "initMain",
		"body": [
			"#include <stdio.h>",
			"",
			"int main(int argc, char *argv[]) {",
			"    $0",
			"    return 0;",
			"}"
		],
			"description": "Snippet de función main con argumentos en C"
		},
		
    "Limpiar salto de línea": {
        "prefix": "limpiarN", 
        "body": [
            "void limpiarN(char variable[]) {",
            "    for(int i = 0; variable[i] != '\\0'; i++) {",
            "        if(variable[i] == '\\n') {",
            "            variable[i] = '\\0';",
            "            break;",
            "        }",
            "    }",
            "}"
        ],
        	"description": "Elimina el salto de línea de una cadena"
		},

	"For loop in C": {
		"prefix": "forc",
		"body": [
		"for (int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++)",
		"{",
		"    ${3:// código aquí}",
		"}"
		],
			"description": "Bucle for clásico en C"
		}

}





